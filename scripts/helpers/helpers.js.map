{"version":3,"names":[],"mappings":"","sources":["scripts/helpers/_helpers.js"],"sourcesContent":[";'use strict';\r\n\r\n\r\n\r\n//───────────────────────────────────createElement\r\nconst setAttributes = (element = '', attributes = '') => {\r\n    Object.keys(attributes).forEach(key => element.setAttribute(key, attributes[key]));\r\n};\r\n\r\nconst addChildren = (element = '', childrens = '') => {\r\n    Object.keys(childrens).forEach(key => element.append(childrens[key]));\r\n};\r\n\r\nconst createElement = (tagName = '') => (attributes = '', childrens = '') => {\r\n    let element = document.createElement(tagName);\r\n    attributes && setAttributes(element, attributes);\r\n    childrens && addChildren(element, childrens);\r\n    return element;\r\n};\r\n\r\n/*\r\n    const a = createElement('a');\r\n    let logoLink = a({href: '/', id: 'logo_text', rel: 'nofollow noopener'}, ['FCC']);\r\n*/\r\n//───────────────────────────────────createElement\r\n\r\n\r\n\r\n//───────────────────────────────────copyToClipboard\r\nconst copyToClipboard = (text) => {\r\n    if (window.clipboardData && window.clipboardData.setData) {\r\n        return clipboardData.setData('Text:', text);\r\n    } else if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\r\n        let textarea = createElement('textarea');\r\n        let textareaCopy = textarea({style: 'position: fixed'}, [text]);\r\n        document.querySelector('body').append(textareaCopy);\r\n        textareaCopy.select();\r\n\r\n        try {\r\n            return document.execCommand('copy');\r\n        } catch (error) {\r\n            console.warn(`Copy to clipboard failed. Error: ${error}`);\r\n            return false;\r\n        } finally {\r\n            textareaCopy.remove();\r\n        }\r\n    }\r\n};\r\n//───────────────────────────────────copyToClipboard\r\n\r\n\r\n\r\n//───────────────────────────────────fadeOut & fadeIn\r\nconst fadeOut = (selector = '', speed = 0, timer = 1000) => {\r\n    let element = document.querySelector(selector).style;\r\n    element.display = 'block';\r\n    element.opacity = 1;\r\n\r\n    /*(function fade() {\r\n        (element.opacity -= .1) < .1 ? element.display = 'none' : setTimeout(fade, speed)\r\n    })();*/\r\n\r\n    setTimeout(function fade() {\r\n        (element.opacity -= .1) < .1 ? element.display = 'none' : setTimeout(fade, speed)\r\n    }, timer);\r\n};\r\n\r\n\r\n/*(() => {\r\n    const fadeOut = (selector = '#preloader_wrapper', speed = 100) => {\r\n        let element = document.querySelector(selector).style;\r\n        element.opacity = 1;\r\n\r\n        (function fade() {\r\n            (element.opacity -= .1) < .1 ? element.display = 'none' : setTimeout(fade, speed)\r\n        })();\r\n    };\r\n\r\n    document.addEventListener('DOMContentLoaded', fadeOut('#preloader_wrapper', 10), {once: true});\r\n})();*/\r\n\r\n\r\nconst fadeIn = (selector = '', speed = 0) => {\r\n    let element = document.querySelector(selector).style;\r\n    element.opacity = 0;\r\n    element.display = 'block';\r\n\r\n    (function fade() {\r\n        (element.opacity += .1) > .9 ?  setTimeout(fade, speed) : null;\r\n    })();\r\n};\r\n//───────────────────────────────────fadeOut & fadeIn\r\n\r\n\r\n\r\n//───────────────────────────────────Modules\r\n\r\n//───────────────────────────────────Modules\r\n\r\n\r\n\r\n//───────────────────────────────────Modules\r\n\r\n//───────────────────────────────────Modules\r\n\r\n\r\n\r\n//───────────────────────────────────Modules\r\n\r\n//───────────────────────────────────Modules\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//───────────────────────────────────Exports\r\nexport {\r\n    createElement,\r\n\r\n    copyToClipboard,\r\n\r\n    fadeOut,\r\n    fadeIn\r\n};\r\n//───────────────────────────────────Exports"],"file":"_helpers.js"}